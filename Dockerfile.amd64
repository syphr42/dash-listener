FROM multiarch/debian-debootstrap:amd64-stretch

# Set download urls
ENV \
    DASH_LISTENER_URL="https://github.com/syphr42/dash-listener/archive/master.zip"

# Set variables and locales
ENV \
    APPDIR="/dash" \
    EXTRA_JAVA_OPTS="" \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    DASH_CONFIG="conf/config.properties"

# Set arguments on build
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Basic build-time metadata as defined at http://label-schema.org
LABEL org.label-schema.build-date=$BUILD_DATE \
    org.label-schema.docker.dockerfile="/Dockerfile" \
    org.label-schema.license="Apache 2.0" \
    org.label-schema.name="Dash Listener" \
    org.label-schema.vendor="Syphr" \
    org.label-schema.version=$VERSION \
    org.label-schema.description="Amazon Dash Button listener" \
    org.label-schema.url="https://github.com/syphr42/dash-listener" \
    org.label-schema.vcs-ref=$VCS_REF \
    org.label-schema.vcs-type="Git" \
    org.label-schema.vcs-url="https://github.com/syphr42/dash-listener.git" \
    maintainer="Gregory Moyer <moyerg@syphr.com>"

# Install basepackages
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    maven \
    openjdk-8-jdk-headless \
    ca-certificates \
    fontconfig \
    locales \
    locales-all \
    libpcap-dev \
    netbase \
    unzip \
    wget \
    zip && \
    rm -rf /var/lib/apt/lists/* && \
ln -s -f /bin/true /usr/bin/chfn

# Install dash-listener
RUN mkdir -p ${APPDIR}/src && \
    wget -nv -O /tmp/dash-listener.zip ${DASH_LISTENER_URL} && \
    unzip -q /tmp/dash-listener.zip -d ${APPDIR}/src && \
    rm /tmp/dash-listener.zip && \
    cd ${APPDIR}/src/dash-listener-master && \
    mvn clean package -P executable && \
    cp ${APPDIR}/src/dash-listener-master/target/dash-listener-*.jar ${APPDIR}/dash-listener.jar && \
    rm -rf ${APPDIR}/src && \
    mkdir -p ${APPDIR}/conf

# Expose volume with configuration
VOLUME ${APPDIR}/conf

# Set working directory, expose and entrypoint
WORKDIR ${APPDIR}

# Setup entrypoint to prepare container
COPY entrypoint.sh /entrypoint.sh
ENTRYPOINT [ "/entrypoint.sh" ]

# Execute command
CMD java -jar dash-listener.jar ${DASH_CONFIG}
